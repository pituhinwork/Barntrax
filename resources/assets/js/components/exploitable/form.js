if (!('Exploitable' in App.Components)) {
    App.Components.Exploitable = {};
}

/**
 * Required data to work:
 * * saver (api method, will be passed a model)
 * * modal_id
 * * model (setter/getter)
 * * emptyModel (getter)
 */
App.Components.Exploitable.Form = Vue.extend({
    data: function() {
        return {
            errors: {},
            loading: 0,
        };
    },
    methods: {
        send: function() {
            this.loading = 1;
            this.saver(this.model).then(
                data => { this.loading = 0; this.$emit('submitted', data); },
                response => { this.loading = 0; this.$emit('submitError', response.data); }
            );
        },
        closeModal: function() {
            $(this.modal_id).modal('hide');
        },
        showModal: function() {
            $(this.modal_id).modal('show');
            this.$emit('modalShown');
        },
        showArchive: function() {
            this.$dispatch('showArchiveModel', this.model);
        },
        showDelete: function() {
            this.$dispatch('showDeleteModel', this.model);
        },
        showDied: function() {
            this.$dispatch('showDiedModel', this.model);
        },
        showUnarchive: function() {
            this.$dispatch('showUnarchive', this.model);
        }
    },
    events: {
        submitted: function(response) {
            if (!this.model.id) {
                this.$dispatch('formAdded', response);
            } else {
                this.$dispatch('formUpdated', response)
            }
            this.closeModal();
            this.model = {};
        },
        submitError: function(errors) {
            this.errors = errors;
        },
        editModel: function(model) {
            this.model = _.extendOwn({}, model);
            this.errors = {};
            this.showModal();
        },
        addModel: function() {
            this.model = _.extendOwn({}, this.emptyModel);
            this.errors = {};
            this.showModal();
        },
        archivedModel: function(model) {
            if (this.model.id == model.id) {
                this.closeModal();
            }
        },
        unarchivedModel: function(model) {
            if (this.model.id == model.id) {
                this.closeModal();
            }
        },
        deletedModel: function(model) {
            if (this.model.id == model.id) {
                this.closeModal();
            }
        },
        diedModel: function(model) {
            if (this.model.id == model.id) {
                this.closeModal();
            }
        }
    }
});
